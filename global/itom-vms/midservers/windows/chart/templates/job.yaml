apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.user }}-{{ .Values.postfix }}-terraform-{{ .Values.action }}
  namespace: {{ .Values.user}}
  labels:
    app: {{ .Values.user }}-{{ .Values.postfix }}-terraform-{{ .Values.action }}
spec:
  template:
    spec:
      containers:
      - name: {{ .Values.user }}-{{ .Values.postfix }}-terraform-{{ .Values.action }}
        imagePullPolicy: Always
        image: sabababoy/terraform
        workingDir: /terraform/itomlab
        command: ["/bin/sh", "-c"]
        args: [
          "terraform init; if [ $ACTION = 'deploy' ]; then terraform apply -auto-approve; elif [ $ACTION = 'destroy' ]; then terraform destroy -auto-approve; else echo 'Error. Unknown action'; fi"
        ]
        volumeMounts:
        - name: {{ .Values.user }}-{{ .Values.postfix }}-terraform-config-volume
          mountPath: /terraform/itomlab/var.tf
          subPath: var.tf
        env:
        - name: ACTION
          valueFrom:
            configMapKeyRef:
              name: {{ $.Values.user }}-{{ $.Values.postfix }}-terraform
              key: ACTION
        {{- range $key, $value := .Values.data }}
        - name: {{ $key }}
          valueFrom:
            configMapKeyRef:
              name: {{ $.Values.user }}-{{ $.Values.postfix }}-terraform
              key: {{ $key }}
        {{- end }}
      volumes:
      - name: {{ .Values.user }}-{{ .Values.postfix }}-terraform-config-volume
        configMap:
          name: {{ .Values.user }}-{{ .Values.postfix }}-terraform
      restartPolicy: Never
      nodeSelector:
        kubernetes.io/os: linux